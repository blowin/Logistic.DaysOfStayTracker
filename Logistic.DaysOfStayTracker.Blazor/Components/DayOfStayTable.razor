@using Microsoft.VisualBasic
@using Constants = Logistic.DaysOfStayTracker.Core.Constants
@using Logistic.DaysOfStayTracker.Core.DayOfStays.Commands

<MudGrid>
    <MudItem Class="pt-5" xs="12">
        <MudText Typo="Typo.h5" Inline="true">Дни пребывания</MudText>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="AddDayOfStay">+</MudButton>
    </MudItem>
    @if (_errors != null)
    {
        <MudItem xl="12" xs="12" xxl="12">
            @foreach (var error in _errors)
            {
                <MudText Color="Color.Error">@error</MudText>
            }
        </MudItem>
    }
    <MudItem xs="4">
        <MudDatePicker @ref="_pickerStart" @bind-Date="SearchRequest.Start" Editable="true" Label="Дата въезда" AutoClose="true">
            <PickerActions>
                <MudButton Class="mr-auto align-self-start" OnClick="@(() => _pickerStart.Clear())">Удалить</MudButton>
            </PickerActions>
        </MudDatePicker>
    </MudItem>
    <MudItem xs="4">
        <MudDatePicker @ref="_pickerEnd" @bind-Date="SearchRequest.End" Editable="true" Label="Дата выезда" AutoClose="true">
            <PickerActions>
                <MudButton Class="mr-auto align-self-start" OnClick="@(() => _pickerEnd.Clear())">Удалить</MudButton>
            </PickerActions>
        </MudDatePicker>
    </MudItem>
    <MudItem xs="4">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="@(async () => await SearchAsync())">Найти</MudButton>
    </MudItem>
    
    @if (_calculateRemainDaysResponse != null)
    {
        <MudItem Class="pt-4" xl="12" xs="12" xxl="12">
            @if (DriverUpsertRequest.HasDeleteOrCreateDateOfStays)
            {
                <MudText Align="Align.Center" Color="Color.Warning">Внимание! Были изменения в датах, для корретного подсчёта, сохраните данные и откройте запись повторно.</MudText>
            }
            <CalculateRemainDaysComponent RemainDays="@_calculateRemainDaysResponse.RemainDays"
                                          DateOfAddDays="@_calculateRemainDaysResponse.DateOfAddDays"
                                          AddDays="@_calculateRemainDaysResponse.AddDays"/>
        </MudItem>
    }

    <MudItem xl="12" xs="12" xxl="12">
        <MudTable Items="@_items" Hover="true" Breakpoint="Breakpoint.Md" LoadingProgressColor="Color.Info">
            <HeaderContent>
                <MudTh>Дата въезда</MudTh>
                <MudTh>Страна въезда</MudTh>
                <MudTh>Дата выезда</MudTh>
                <MudTh>Страна выезда</MudTh>
                <MudTh>Количество дней</MudTh>
                <MudTh>Действия</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Дата въезда">@context.EntryDate</MudTd>
                <MudTd DataLabel="Страна въезда">@(_countries[context.EntryCountryId].Name)</MudTd>
                <MudTd DataLabel="Дата выезда">@context.ExitDate</MudTd>
                <MudTd DataLabel="Страна выезда">@(_countries[context.ExitCountryId].Name)</MudTd>
                <MudTd DataLabel="Количество дней">@((new DateRangeValueType(context.EntryDate, context.ExitDate)).TotalDays)</MudTd>
                <MudTd>
                    <MudButton Color="Color.Primary" OnClick="@(() => Delete(context))">Удалить</MudButton>
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager Class="pa-4" PageSizeOptions="@(new[] {Constants.DefaultPageSize})" HideRowsPerPage="true"/>
            </PagerContent>
        </MudTable>
    </MudItem>
</MudGrid>