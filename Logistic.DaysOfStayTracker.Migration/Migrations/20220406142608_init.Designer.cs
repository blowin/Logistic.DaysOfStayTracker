// <auto-generated />
using System;
using Logistic.DaysOfStayTracker.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Logistic.DaysOfStayTracker.Migration.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220406142608_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("Logistic.DaysOfStayTracker.Core.Countries.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("874c46ca-e44b-4f8e-8c69-f8c26b01cad8"),
                            Name = "Польша"
                        },
                        new
                        {
                            Id = new Guid("b2b4a9ec-5788-414b-a018-60602649bc83"),
                            Name = "Эстония"
                        },
                        new
                        {
                            Id = new Guid("9714975e-99a2-490f-8135-56f152d3afd3"),
                            Name = "Литва"
                        },
                        new
                        {
                            Id = new Guid("eb675cb9-e115-4f25-82f6-2330e84a6f32"),
                            Name = "Латвия"
                        });
                });

            modelBuilder.Entity("Logistic.DaysOfStayTracker.Core.DayOfStays.DayOfStay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DriverId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EntryCountryId")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("EntryDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ExitCountryId")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("ExitDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.HasIndex("EntryCountryId");

                    b.HasIndex("ExitCountryId");

                    b.ToTable("DayOfStays");
                });

            modelBuilder.Entity("Logistic.DaysOfStayTracker.Core.Drivers.Driver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("Logistic.DaysOfStayTracker.Core.DayOfStays.DayOfStay", b =>
                {
                    b.HasOne("Logistic.DaysOfStayTracker.Core.Drivers.Driver", null)
                        .WithMany()
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Logistic.DaysOfStayTracker.Core.Countries.Country", "EntryCountry")
                        .WithMany()
                        .HasForeignKey("EntryCountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Logistic.DaysOfStayTracker.Core.Countries.Country", "ExitCountry")
                        .WithMany()
                        .HasForeignKey("ExitCountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntryCountry");

                    b.Navigation("ExitCountry");
                });
#pragma warning restore 612, 618
        }
    }
}
